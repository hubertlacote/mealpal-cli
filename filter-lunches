#! /bin/bash

where_am_i="${0%/*}"
source "${where_am_i}/common"

usage() {
    [[ -z ${1:-} ]] || echo -e "${script_name} - Error: ${1}\n"
    echo -e "Usage:" >&2
    echo -e "list-available-lunches | ${script_name} [-h] [-m MEAL_NAME] [-r RESTAURANT_NAME]\n" >&2
    echo -e "\t-h\t\t\tPrint this usage information" >&2
    echo -e "\t-m\tMEAL_NAME\tFilter using the meal name specified" >&2
    echo -e "\t-r\tRESTAURANT_NAME\tFilter using the restaurant name specified" >&2
    echo -e "\n${script_name} allows to filter a JSON list of meals returned\n"\
            "by list-available-lunches. It reads from standard input."
    exit 1
}

jq_filters=""
addFilter() {
    [[ -z "${jq_filters}" ]] || jq_filters+=" and "
    filter_name="${1}"
    filter_value="${2}"
    jq_filters+="(.${filter_name} | match(\"${filter_value}\"))"
}

meal_name=""
restaurant_name=""
while getopts "hm:r:" option_name; do
    case $option_name in
        m) meal_name="${OPTARG:-}";;
        r) restaurant_name="${OPTARG:-}";;
        h) usage;;
    esac
done


[[ -z "${meal_name}" ]] || addFilter "meal_name" "${meal_name}"
[[ -z "${restaurant_name}" ]] || addFilter "restaurant_name" "${restaurant_name}"

[[ -n "${jq_filters}" ]] || usage "No filter specified."

result=$(jq "[.[] | select(${jq_filters})]")

[[ -n "${result}" ]] || die "Meal specified is not available."

echo "${result}"
